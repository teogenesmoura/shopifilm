{"version":3,"sources":["API_URLs.js","errors.js","containers/DashboardContainer/dataFetcher.js","components/SearchBox/index.js","components/MoviesList/index.js","components/NominationList/index.js","containers/DashboardContainer/index.js","fonts/OpenSans-SemiBold.ttf","customTheme.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Object","freeze","OMDB_API_URL","REACT_APP_OMDB_API_KEY","process","MAX_MOVIES_ERROR","searchMovie","title","a","url","fetch","then","response","json","body","catch","err","useStyles","makeStyles","theme","searchTextField","width","alignSelf","input","color","SearchBox","props","classes","useState","movieQuery","setMovieQuery","TextField","id","variant","label","InputProps","className","value","onChange","e","target","type","Button","name","data-testid","onClick","searchMoviesByName","padding","display","overflow","row","movieTitle","movieYear","card","height","MovieRow","Grid","container","item","xs","Typography","movie","Title","Year","addMovieToNominationList","Divider","MoviesList","searchResult","Card","CardContent","map","position","removeFromNominationList","NominationList","nominationList","backgroundColor","palette","primary","white","searchHolder","flexDirection","alignItems","justifyContent","movieList","DashboardContainer","setSearchResult","setNominationList","snackBarOpen","setSnackBarOpen","length","handleSnackbarClose","event","reason","movieName","res","Search","temp","index","indexOf","splice","Snackbar","open","autoHideDuration","onClose","elevation","severity","openSansSemiBold","fontFamily","fontStyle","fontDisplay","src","OpenSansSemiBold","customTheme","createMuiTheme","typography","fontSize","h1","h2","h3","h4","h5","h6","h7","body1","body2","overrides","MuiCssBaseline","main","secondary","black","background","lightGrey","mediumGrey","text","App","StylesProvider","injectFirst","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d78f5f.chunk.js","sourcesContent":["module.exports = Object.freeze({\n  OMDB_API_URL: 'https://www.omdbapi.com/?s=',\n  REACT_APP_OMDB_API_KEY: process.env.REACT_APP_OMDB_API_KEY\n});\n","module.exports = Object.freeze({\n  //Max nominated movies\n    MAX_MOVIES_ERROR: \"You've already nominated 5 movies!\"\n})\n","import {OMDB_API_URL, REACT_APP_OMDB_API_KEY} from './../../API_URLs'\n\nexport async function searchMovie(title) {\n  const url = OMDB_API_URL  +  title + '&apikey=' + REACT_APP_OMDB_API_KEY\n  const response = await fetch(url)\n                     .then(response => response.json())\n                     .then(body => { return body })\n                     .catch(err => { return err })\n  return response\n}\n","import React, {useState} from 'react'\nimport { Button, TextField } from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  searchTextField: {\n    width: '30%',\n    alignSelf: 'center'\n  },\n  input: {\n    color: 'red'\n  }\n}))\n\nexport default function SearchBox(props) {\n  const classes = useStyles()\n  const [movieQuery, setMovieQuery] = useState('')\n\n  const handleChange = (e) => {\n    setMovieQuery(e.target.value)\n  }\n\n  return (\n    <>\n      <TextField id=\"outlined-search\"\n               variant=\"outlined\"\n               label=\"Search for a movie\"\n               color=\"secondary\"\n               InputProps={{\n                 className: classes.input\n               }}\n               className={classes.searchTextField}\n               value={movieQuery}\n               onChange={handleChange}\n               type=\"search\" />\n      <Button color=\"primary\"\n            name=\"searchMovieButton\"\n            variant=\"outlined\"\n            data-testid=\"searchMovieButton\"\n            onClick={() => props.searchMoviesByName(movieQuery)}>Search movie</Button>\n    </>\n  )\n}\n","import React, {useState} from 'react'\nimport { Grid, Card, CardContent, Typography, Button, Divider} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: '0 1rem',\n    display: 'flex',\n    overflow: 'auto'\n  },\n  row: {\n    padding: '1rem 0',\n  },\n  movieTitle: {\n    color: 'black'\n  },\n  movieYear: {\n    color: 'black'\n  },\n  card: {\n    width: '100%',\n    height: '40vh',\n    overflow: 'auto'\n  }\n}))\n\nfunction MovieRow(props) {\n    const classes = useStyles()\n\n    function addMovieToNominationList() {\n      props.addMovieToNominationList(props.movie)\n    }\n\n    return (\n      <Grid container className={classes.row}>\n        <Grid item xs={6}>\n          <Typography className={classes.movieTitle}>\n            {props.movie.Title}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography className={classes.movieYear}>\n            {props.movie.Year}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n        <Button color=\"primary\"\n                name=\"nominateMovieButton\"\n                variant=\"outlined\"\n                onClick={addMovieToNominationList}>Nominate movie</Button>\n        </Grid>\n        <Divider />\n      </Grid>\n    )\n}\n\nexport default function MoviesList(props) {\n  let searchResult = props.searchResult\n  const classes = useStyles()\n\n  return (\n    <Grid container className={classes.body}>\n      <Card className={classes.card}>\n        <CardContent>\n        {searchResult ? searchResult.map(function(movie, position) {\n          return <MovieRow movie={movie} key={position} addMovieToNominationList={props.addMovieToNominationList}/>\n        }): ''}\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n","import React, {useState} from 'react'\nimport { Grid, Typography, Card, CardContent, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: '0 1rem',\n    display: 'flex',\n    overflow: 'auto'\n  },\n  row: {\n    padding: '1rem 0',\n  },\n  movieTitle: {\n    color: 'black'\n  },\n  movieYear: {\n    color: 'black'\n  },\n  card: {\n    width: '100%',\n    height: '40vh',\n    overflow: 'auto'\n  }\n}))\n\nfunction MovieRow(props) {\n  const classes = useStyles()\n  return (\n    <Grid container className={classes.row}>\n      <Grid item xs={6}>\n      <Typography className={classes.movieTitle}> {props.movie.Title} </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Button variant=\"outlined\"\n                id=\"removeButton\"\n                onClick={(e) => { props.removeFromNominationList(props.movie) }}\n                className={classes.movieTitle}>Remove</Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default function NominationList(props) {\n    const classes = useStyles()\n\n    return (\n      <>\n        <Grid container className={classes.body}>\n          <Card className={classes.card}>\n            <CardContent>\n              { props.nominationList ? props.nominationList.map(function(movie, position) {\n                return <MovieRow movie={movie} removeFromNominationList={props.removeFromNominationList} key={position} />\n              }) : ''}\n            </CardContent>\n          </Card>\n        </Grid>\n      </>\n    )\n}\n","import React, {useState} from 'react'\nimport {searchMovie} from './dataFetcher'\nimport { Grid, Snackbar } from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {makeStyles} from '@material-ui/core/styles'\nimport SearchBox from './../../components/SearchBox'\nimport MoviesList from './../../components/MoviesList'\nimport NominationList from './../../components/NominationList'\nimport {MAX_MOVIES_ERROR} from './../../errors'\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    backgroundColor: theme.palette.primary.white,\n    padding: '0 1rem',\n    height: '100vh',\n    display: 'flex',\n  },\n  searchHolder: {\n    height: '20vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  movieList: {\n    height: '100vh',\n  },\n  nominationList: {\n    height: '50vh',\n  },\n}))\n\nexport default function DashboardContainer(){\n  const classes = useStyles()\n  const [searchResult, setSearchResult] = useState('')\n  const [nominationList, setNominationList] = useState([])\n  const [snackBarOpen, setSnackBarOpen] = useState(false)\n\n  function addMovieToNominationList(movie) {\n    if (nominationList.length == 5) {\n      setSnackBarOpen(true)\n    } else {\n      setNominationList([...nominationList, movie])\n    }\n  }\n\n  function removeFromNominationList(movie) {\n    let temp = [...nominationList]\n    let index = temp.indexOf(movie)\n    if (index !== -1) {\n      temp.splice(index, 1)\n      setNominationList(temp)\n    }\n  }\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason == 'clickaway') {\n      return;\n    }\n    setSnackBarOpen(false)\n  }\n\n  async function searchMoviesByName(movieName) {\n    let res = await searchMovie(movieName)\n    setSearchResult(res.Search)\n  }\n\n  return(\n    <>\n      <Grid container className={classes.body}>\n        <Grid item xs={12} className={classes.searchHolder}>\n          <SearchBox searchMoviesByName={searchMoviesByName} />\n        </Grid>\n        <Grid container>\n          <Grid item xs={6} className={classes.movieList}>\n            <MoviesList searchResult={searchResult}  addMovieToNominationList={addMovieToNominationList} />\n          </Grid>\n          <Grid item xs={6} className={classes.nominationList}>\n            <NominationList nominationList={nominationList} addMovieToNominationList={addMovieToNominationList} removeFromNominationList={removeFromNominationList} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Snackbar open={snackBarOpen} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSnackbarClose} severity=\"error\">\n          {MAX_MOVIES_ERROR}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/OpenSans-SemiBold.a16d8201.ttf\";","import { createMuiTheme } from '@material-ui/core/styles'\nimport OpenSansSemiBold from './fonts/OpenSans-SemiBold.ttf'\n\nconst openSansSemiBold = {\n    fontFamily: 'OpenSans',\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n    src: `\n      local('OpenSans'),\n      local('OpenSans-SemiBold'),\n      url(${OpenSansSemiBold}) format('ttf')\n    `,\n  };\n\n  export const customTheme = createMuiTheme(\n    {\n    typography: {\n      fontFamily: \"OpenSans\",\n      body:{\n        fontSize:12,\n        fontStyle: 'semibold',\n      },\n      h1:{\n        fontSize:54,\n        fontStyle: 'semibold',\n      },\n      h2:{\n        fontSize:36,\n        fontStyle: 'semibold',\n      },\n      h3:{\n        fontSize:26,\n        fontStyle: 'semibold',\n      },\n      h4:{\n        fontSize:16,\n        fontStyle: 'semibold',\n      },\n      h5:{\n        fontSize:14,\n        fontStyle: 'semibold',\n      },\n      h6:{\n        fontSize:13,\n        fontStyle: 'semibold',\n      },\n      h7:{\n        fontSize:9,\n        fontStyle: 'regular',\n      },\n      body1:{\n        fontSize:12,\n        fontStyle: 'regular'\n      },\n      body2:{\n        fontSize:9,\n        fontStyle: 'semibold',\n      }\n    },\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          '@font-face': [openSansSemiBold],\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: '#121212',\n      },\n      secondary: {\n        main: '#00C354',\n      },\n      black: {\n        main: '#000',\n      },\n      white: {\n        main: '#FFF',\n      },\n      background: {\n        main: '#121212'\n      },\n      lightGrey: {\n        main: '#979797',\n      },\n      mediumGrey: {\n        main: '#252525',\n      },\n      text: {\n        primary: \"#FFFFFF\"\n      }\n    },\n  });\n","import './App.css';\nimport DashboardContainer from './containers/DashboardContainer'\nimport {StylesProvider, ThemeProvider} from '@material-ui/core'\nimport {customTheme} from './customTheme'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={customTheme}>\n          <DashboardContainer theme={customTheme}></DashboardContainer>\n        </ThemeProvider>\n      </StylesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}